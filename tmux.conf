set -g default-terminal "screen-256color"

# remap prefix to Control + Space
set -g prefix C-Space
unbind C-b
bind C-Space send-prefix

## use vim key-bindings
set -g status-keys vi

setw -g mode-keys vi # setw affects 'window', i.e. all panes in a Window

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling
unbind ^A
bind ^A select-pane -t :.+

# Smart pane switching with awareness of vim splits
# relies on vimrc: "Bundle 'christoomey/vim-tmux-navigator'"
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# allow resizing panes with similar shortcuts to splits
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

bind '%' split-window -h -c "#{pane_current_path}"
bind '"' split-window -c "#{pane_current_path}"

# Split windows with vim bindings (j for split down, l for split right)
# Open new panes/windows in current path
bind j split-window -v -c "#{pane_current_path}"
bind C-j split-window -v -c "#{pane_current_path}"

bind l split-window -h -c "#{pane_current_path}"
bind C-l split-window -h -c "#{pane_current_path}"

bind 'c' new-window -c "#{pane_current_path}"

# allow using mouse to scroll
# TODO: disable mouse scroll
setw -g mode-mouse on

# 1-indexed windows and panes
set -g base-index 1
set -g pane-base-index 1

# remove delay for escape key in tmux (painful in vim)
# http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -s escape-time 0

# Increase size of history
set-option -g history-limit 10000

# change active pane highlighting
set -g pane-border-fg white
set -g pane-border-bg black
set -g pane-active-border-fg green
set -g pane-active-border-bg colour240 # gray

# status bar style
set -g status-fg white
set -g status-bg colour235 # dark gray

setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg green
setw -g window-status-current-bg default
setw -g window-status-current-attr bright

# tmux command line
set -g message-fg white
set -g message-bg black
set -g message-attr bright

# status bar content
set -g status-left "#[fg=green]Session: #S"
set -g status-left-length 80
set -g status-right "#[fg=green]%d %b %R"
set -g status-utf8 on
set -g status-justify centre

setw -g monitor-activity on
set -g visual-activity on

## Mac specific ##
# connect to Mac clipboard -- must first install `brew install reattach-to-user-namespace`
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
# Use y to copy and reattach-to-user-namespace
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Bind <Space> to enter copy mode
bind Space copy-mode
# bind C-Space copy-mode
